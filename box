#!/bin/sh

# Box: create namespaced script commands 

set -e


# Id: script-mpe

load()
{
  [ -n "$UCONFDIR" ] || UCONFDIR=$HOME/.conf
  test -n "$hostname" || hostname=$(hostname -s)
  test "$(pwd)" = "$(pwd -P)" || warn "current dir seems to be aliased"
  mkvid $(pwd)
  namespace=$vid

  script=$UCONFDIR/box/${hostname}/${namespace}.sh

  std_script=$UCONFDIR/box/${hostname}-localscripts.sh
}

usage()
{
  echo "$scriptname.sh Bash/Shell script helper"
  echo 'Usage:'
  echo "  $scriptname <cmd> [<args>..]"
}

commands()
{
  echo 'Commands:'
  echo '    -h|help                     '
  echo '    -e|edit                     Edit local script or abort. '
  echo '    -E|edit-main                Edit main script. '
  echo '    -i|init                     Init local script with name. '
}

docs()
{
  echo 'Docs:'
}


box_find_localscript()
{
  test -e "$script" && return || {
    warn "No script for $hostname:$(pwd)"
    return 1
  }
}

box_req_script()
{
  box_find_localscript && {
    test -e $script && {
        log "# Including $script"
        . $script $@
    } || return 1
  } || return 1
}


# User commands

c__v()
{
  c_version
}
c_version()
{
  # no version, just checking it goes
  echo 0.0.0
}
man_1_help="Echo a combined usage, command and docs"
c_help()
{
  test -z "$1" && {
    usage
    echo ''
    commands
    echo ''
    docs
  } || {
    echo_help $1
  }
}
man_1__h="Alias for 'help'"
c__h()
{
  c_help $@
}

man_1_edit="Edit localscript and box script or abort. "
c_edit()
{
  box_find_localscript $@ || exit 1
  locate_name
  $EDITOR $script $fn
}
man_1__e="Shortcut to 'edit'"
c__e()
{
  cmd=edit c_edit $@
}
man_1_edit_main="Edit box script and local scripts. "
c_edit_main()
{
  locate_name
  box_find_localscript $@
  $EDITOR $fn $script
}
man_1_E="Shortcut to 'edit-main'"
c__E()
{
  cmd=edit-main c_edit_main $@
}

main_1_init="Initialize local script for current location. "
c_init()
{
  box_name="${hostname}:${namespace}"
  test -n "$1" && name="$1" || \
      warn "No name alias given for box $box_name, storing in ${hostname}-scripts"
  mkdir -vp $UCONFDIR/box/

  test -n "$name" && {
    named_script="$UCONFDIR/box/$name-localscripts.sh"
    test -e "$named_script" || {
      touch $named_script
      echo "#!/bin/sh" > $named_script
    }
    echo "${namespace}_$name()" >> $named_script
    echo "{" >> $named_script
    echo "}" >> $named_script
    echo >> $named_script

    test -e $std_script || {
        mkdir -vp $(dirname $std_script)
        touch $std_script
        echo "#!/bin/sh" > $std_script
    }
    echo ". $named_script" >> $std_script
    #echo "# $script " >> $std_script

  } || {
    test -e $std_script || {
        mkdir -vp $(dirname $std_script)
        touch $std_script
        echo "#!/bin/sh" > $std_script
    }
    echo "${namespace}_Box()" >> $std_script
    echo "{" >> $std_script
    echo "}" >> $std_script
    echo >> $std_script

    test -e $script || {
        mkdir -vp $(dirname $script)
        touch $script
        echo "#!/bin/sh" > $script
    }
    echo "# $std_script " >> $script
  }

  test -n "$name" \
      && log "Extended $name with script $box_name" \
      || log "Created local script $box_name"
}
c__i()
{
  cmd=init c_init $@
}
man_1_="Default: require localscript. "
c_()
{
  box_req_script $@ || exit 1
  test -z "$c" || shift $c; c=
  # XXX list cmds? $UCONFDIR/box/${hostname}/index.sh list $(pwd)
  type run_box 1> /dev/null 2> /dev/null && {
    run_box $@
  }
}

man_1_run="Require localscript and exec. given function. "
c_run()
{
  box_req_script $@
  test -z "$c" || shift $c; c=0
  test -n "$1" || error "Function name required" 1
  mkvid box_$1
  { type $vid &> /dev/null; } && {
    test -n "$1" && shift 1
    $vid $@ || {
      error "running command $vid" 2
    }
  } || {
    error "No command $vid" 1
  }
}


# Main

test -n "$PREFIX" || PREFIX=$HOME
. $PREFIX/bin/util.sh

# Execute

base=$(basename $0 .sh)
scriptname=box

. $PREFIX/bin/main.sh $@

