@Tasks
    (D) See about Taxus/tasks later when <txt.py> and <list.py> is more complete

@Txt @List
    (A) Replace txt parser with refactored txt2, some things to iron out. See #TodoListItemParser and #URLListItemParser

    <list.py> [2017-05-01] manage lines representing records
        [Taxus]
        [res.lst:parse] [res.lst:ListTxtWriter] [res.lst:write]
        [res.lst:ListTxtWriter.proc]
        [res.lst:URLListParser]
        @read-list @load-list @sync-list @write-list @update-list

    [res.lst] <list.rst> [2012-03-12] [2018-01-04]
    @res.lst <res/list.py>
		@ListItemTxtParser [txt.AbstractTxtSegmentedRecordParser txt.AbstractTxtRecordParser txt.AbstractRecordIdStrategy txt.AbstractRecordReferenceStrategy]
		@ListTxtParser [txt.AbstractIdStrategy]
		@URLListItemParser [txt2.AbstractTxtLineParserRegexFields txt2.AbstractTxtLineParser]
		@URLListParser [txt2.AbstractTxtListParser]
		@ListTxtWriter [txt.AbstractTxtListWriter]
		@write TODO: 1. give access to lookup indices  <res/lst.py> line:85-85 

	<txt.py> [2017-08-19] misc. txt-line format parsing
	    @cmd_urllist [res.lst.URLListParser]
		@cmd_todolist [res.todo.TodoListParser]
            TODO: extend new res.txt2 parser base  @txt.py line:65-65 
		@cmd_todotxt [res.todo.TodoTxtParser]
		@cmd_doctree [res.doc.Catalog] TODO: construct topic tree
            XXX: skipping duplicate dir where-files index/ReadMe/main  @txt.py line:114-114 
		@cmd_txtstat_tree
		@cmd_fold [scrow]
            TODO: remove ctx from scrow API  @txt.py line:171-171 
		@cmd_unfold
	<txt.rst> [2018-01-22] Initial feature doc, plain-text format listing
        
    @res.txt2 [2017-05-24]
		@ConcreteTxtLineParser [AbstractTxtLineParser]
		@AbstractTxtLineParserTargetStrategy
		@AbstractTxtLineParserFieldsStrategy [AbstractTxtLineParserTargetStrategy]
		@AbstractTxtLineParserSimpleFieldArgsStrategy [AbstractTxtLineParserTargetStrategy]
		@AbstractTxtLineParserRegexFields [AbstractTxtLineParserSimpleFieldArgsStrategy]
        @AbstractTxtListParser.load
            TODO: extend parser context, some gate.content based parser with offsets would be nice to refactor to. <res/txt2.py> line:542-543 
            XXX: further pre-/line-proc possible; for now store comments <res/txt2.py> line:552-552 
            XXX: use of byte-offset, without tracking character width or the amount of raw whitespace stripped limits use. Again, see gate.content and Scrow for stream resource deref. and demuxing. <res/txt2.py> line:569-571 
		@SimpleTxtLineItem
    @res.txt [2017-05-01]
        @AbstractTxtListWriter
            TODO: see res/todo.py writer and describe differences @res.txt.AbstractTxtListWriter <res/txt.py>
        @AbstractIdStrategy @AbstractTxtListParser
            TODO: no on-init ctx/prj/ref/cite handling yet. see AbstractTxtListParser.proc @res.txt.AbstractIdStrategy <res/txt.py> line:323-323 
    @res.todo [2017-03-20]
        @TodoListItemParser [txt2.AbstractTxtLineParserRegexFields txt2.AbstractTxtLineParser] [2018-01-04]
        @TodoListParser [txt2.AbstractTxtListParser] item_parser:TodoListItemParser item_Builder:txt2.SimpleTxtLineItem [2018-01-04]
        @TodoTxtTaskParser [txt.AbstractTxtRecordParser] [2017-05-01]
            TODO: replace txt.AbstractTxtRecordParser_Old with txt2, see #TodoListParser [2018-10-01]
        @TodoTxtParser [UserDict] [2017-08-21]
            TODO: still uses TodoTxtTaskParser, which uses old txt.*Parser* [2018-10-01]
            FIXME: move docid from context, refine srcid <res/todo.p> line:182-183 line:191-192 

	<tasks.py> [2016-09-11] processor for task lists to amend radical, similar to lst/txt...
		[res.task.parse_tags] [res.task.re_issue_id_match] [res.mb.tag_seps] [res.task.RedisSEIStore] [res.todo.TodoTxtParser] [res.TaskListParser]
        FIXME: defaults  @tasks.py line:421-421 
        Default attrs: TODO: hide radical attr  @tasks.py line:157-157 
        TODO: radical sh-compat line format  @tasks.py line:241-241 
        TODO: check, update from changed comment  @tasks.py line:393-393 
        XXX: SCRIPT-MPE-2 skip for found reference, try to get to working flow  @tasks.py line:361-361 
    <tasks-dev.rst> objectives for <tasks.py>

	<hier.py> [2016-09-04]
	    attempt at Taxus/SQLAlchemy storage CLI client
	    @cmd_import
	        TODO: [res.todo.TodoTxtParser]
        FIXME  @hier.py line:119-119 
        FIXME: want multiple SqlBase's  @hier.py line:338-338 
        TODO  @hier.py line:180-180 
        TODO: read from stdin  @hier.py line:188-188 
        TODO  @hier.py line:198-198 
        TODO: finish up new todotxt parser  @hier.py line:270-270 
    @res.hier [2018-01-04]
        empty file

    <htd.sh>
        @htd__build_todo_list [2016-09-18]
            [todo-meta.py]
    <todo-meta.py> [2015-11-30] Looking at TODO parsing.

    <todo.py> [2014-08-31] time-ordered, grouped tasks; attempt at SQLAlchemy generic task-relation
    <todo.rst> [2014-08-31] dev notes with <todo.py>

 @res/metafile.py line:288-291 
XXX get global id from meta or volume.  @res/metafile.py line:56-56 
XXX: Metalink syntax  @res/metafile.py line:260-260 
XXX: using tuple UTC -> epoc seconds, OK? or is getmtime local.. depends on host  @res/metafile.py line:346-346 
XXX: not implemented  @res/metafile.py line:406-406 
XXX: maybe rewrite to Dir.walk  @res/metafile.py line:430-430 
XXX: ctime?  @res/metafile.py line:503-503 
XXX used as class variuables..  @res/metafile.py line:549-549 
XXX: perhaps rename DOTID just markerleaf to reflect find_config_path  @res/metafile.py line:636-636 
XXX: todo operations on stage index  @res/metafile.py line:780-780 
 @res/bm.py line:420-421 
XXX: Dont use cjson, its buggy, see comments at  @res/js.py line:1-1 
FIXME: exclude patterns per set  @res/ws.py line:150-150 
TODO: move this, res.dbm.MetaDirIndex  @res/ws.py line:105-105 
XXX: Old PMO stuff  @res/ws.py line:98-98 
 @res/ws.py line:203-205 
FIXME: return first 'key' class  @res/primitive.py line:80-80 
XXX: perhaps re-use QNames objects for regular attribute names  @res/primitive.py line:62-62 
XXX  @res/primitive.py line:175-175 
 @res/ck.py line:7-8 
XXX: Python > 3.2: hashlib.algorithms_available.add('crc32')  @res/ck.py line:47-47 
TODO adapt Workspace.yamldoc and couchb.mapping.Document?  @res/doc.py line:11-11 
TODO ifgenerator  @res/fs.py line:84-84 
TODO move to res.iface or res  @res/fs.py line:124-124 
XXX: decode from opts.fs_enc  @res/fs.py line:69-69 
 @res/fs.py line:338-339 
XXX other types  @res/fs.py line:413-413 
XXX: what to do with complete attribute list etc?  @res/fs.py line:446-446 
XXX yields relative path INode  @res/fs.py line:492-492 
XXX: writes string only. cannot break maxlength without have knowledge of header  @res/mimemsg.py line:33-33 
XXX: maybe rewrite to Dir.walk  @res/vc.py line:92-92 

# vim:ft=todo.txt:
