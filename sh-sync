#!/usr/bin/env bash

# Keep build tooling copies in sync

set -- $(unique-files "$PWD/.git/hooks/pre-commit" $HOME/.git-pre-commit* | \
    tr '\n' ' ' )
files-sync "$@" && c-passed || c-failed

set -- $(unique-files \
    ~/bin/.travis.y*ml \
    ~/project/*script*/.travis.y*ml \
    ~/project/x-ci*/.travis.y*ml \
  | tr '\n' ' ')
files-sync "$@" && c-passed || c-failed


# TODO: cleanup, diff these too, later.
#tools/sh/init.sh
#tools/sh/init-here.sh
#tools/sh/log.sh
#tools/sh/tags-filter.sh
#tools/sh/tags.sh

#$(echo tools/ci/parts/*.sh)

#tools/sh/boot/null.sh
#tools/sh/boot/script.sh
#tools/sh/boot/std.sh
#tools/sh/boot/stderr-console-logger.sh
#tools/sh/boot/test.sh


# For each given path (remove glob duplicates but don't re-sort)
for x in ` remove-dupes <<EOM

sh-main
sh-treebox-ci
sh-baseline.tab
sh-project.tab
tools/sh/build/dev.sh
tools/sh/build/test.sh
tools/sh/parts/env-0.sh
$(echo tools/sh/parts/env-*.sh | tr ' ' '\n')
tools/sh/parts/init.sh
tools/sh/parts/print-color.sh
tools/sh/bats-colorize.sh
tools/sh/run.sh
tools/sh/util.sh
$(echo tools/ci/*.sh | tr ' ' '\n')
$(echo tools/ci/parts/*.sh | tr ' ' '\n')
tools/sh/user-env.sh
tools/sh/env.sh
tools/ci/env.sh

EOM
`; do
  test -n "$x" || continue
  # TODO: limit diff dirs

  test -e ~/bin/"$x" -o -e ~/htdocs/"$x" \
      -o -e ~/.conf/"$x" \
      -o -e ~/project/user-scripts/"$x" \
      -o -e ~/project/user-scripts-incubator/"$x" || {

    case "$x" in *"*"* ) continue ;; esac
    echo "# No such file '$x'" >&2
    exit 100
  }
  #echo "# x:'$x'" >&2

  #test -e ~/bin/$x -o -e ~/htdocs/$x  \
  #    -o -e ~/user-scripts/$x || touch ~/bin/$x

  test -h "$PWD/$x" && continue

  diff -bqr ~/bin/"$x" ~/project/user-scripts/"$x" && continue

  vimdiff $( unique-files \
      ~/"bin/$x" ~/"project/user-scripts/$x" ~/"htdocs/$x" ~/.conf/"$x" || \
      return )
done

# Id: user-script/ sh-sync
# From: BIN:
# To: HT:
